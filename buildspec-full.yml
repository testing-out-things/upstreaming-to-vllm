# buildspec-full.yml
version: 0.2

env:
  variables:
    IMAGE_TAG: "$CODEBUILD_RESOLVED_SOURCE_VERSION"

phases:
  install:
    commands:
      - |
        set -euo pipefail
        echo "▶ Downloading Kaizen CLI from $KAIZEN_CLI_S3"
        aws s3 cp "$KAIZEN_CLI_S3" ./kaizen
        if [[ ! -s ./kaizen ]]; then
          echo "ERROR -> Kaizen CLI download failed" >&2
          exit 1
        fi
        chmod +x ./kaizen

  pre_build:
    commands:
      - set -euo pipefail
      - echo "▶ Logging in to source ECR"
      - aws ecr get-login-password --region "$AWS_REGION" | docker login -u AWS --password-stdin "$ECR_REGISTRY"
      - echo "Using BASE_IMAGE=$BASE_IMAGE"
      - echo "Overlay tag -> $IMAGE_TAG"

  build:
    commands:
      - echo "▶ Building overlay image"
      - docker build --build-arg BASE_IMAGE="$BASE_IMAGE" -f Dockerfile.rebase -t overlay:"$IMAGE_TAG" .

  post_build:
    commands:
      - set -euo pipefail
      - echo "▶ Pushing overlay to Kaizen ECR"
      - docker tag overlay:"$IMAGE_TAG" "$KAIZEN_ECR_URI:$IMAGE_TAG"
      - aws ecr get-login-password --region "$KAIZEN_REGION" | docker login -u AWS --password-stdin "$KAIZEN_ECR_REGISTRY"
      - docker push "$KAIZEN_ECR_URI:$IMAGE_TAG"
      - echo "▶ Launching Kaizen inspect workload"
      - ./kaizen start-workload --image "$KAIZEN_ECR_URI:$IMAGE_TAG" --instanceType "$KAIZEN_INSTANCE_TYPE" --nodeCount "$KAIZEN_NODE_COUNT" --command "$KAIZEN_COMMAND" --wait-for-completion=true --tail-logs

artifacts:
  files: []   # CodeBuild logs are enough
