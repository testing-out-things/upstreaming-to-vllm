name: Stage-3 Overlay (latest 844 base â†’ Kaizen ECR)

on:
  workflow_dispatch:
  pull_request:

env:
  IMAGE_TAG: ${{ github.event.pull_request.head.sha || github.sha }}

jobs:
  build-overlay:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # 844 creds to invoke CodeBuild + pull base
      - name: Configure AWS creds (844)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token:     ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region:            ${{ secrets.AWS_REGION }}

      - name: Start CodeBuild (overlay)
        id: start_build
        run: |
          set -euo pipefail
          echo "Overlay Stage-3: building image tag $IMAGE_TAG from latest 844 base"
          BUILD_ID=$(aws codebuild start-build \
            --project-name kaizen-poc \
            --source-version ${{ env.IMAGE_TAG }} \
            --buildspec-override buildspec-stage3-overlay.yml \
            --environment-variables-override \
                name=IMAGE_TAG,value=${{ env.IMAGE_TAG }},type=PLAINTEXT \
                name=AWS_REGION,value=${{ secrets.AWS_REGION }},type=PLAINTEXT \
                name=ECR_REGISTRY,value=${{ secrets.ECR_REGISTRY }},type=PLAINTEXT \
                name=ECR_URI,value=${{ secrets.ECR_URI }},type=PLAINTEXT \
                name=KAIZEN_REGION,value=${{ secrets.KAIZEN_REGION }},type=PLAINTEXT \
                name=KAIZEN_ECR_REGISTRY,value=${{ secrets.KAIZEN_ECR_REGISTRY }},type=PLAINTEXT \
                name=KAIZEN_ECR_URI,value=${{ secrets.KAIZEN_ECR_URI }},type=PLAINTEXT \
                name=KAIZEN_ACCESS_KEY_ID,value=${{ secrets.KAIZEN_ACCESS_KEY_ID }},type=PLAINTEXT \
                name=KAIZEN_SECRET_ACCESS_KEY,value=${{ secrets.KAIZEN_SECRET_ACCESS_KEY }},type=PLAINTEXT \
                name=KAIZEN_SESSION_TOKEN,value=${{ secrets.KAIZEN_SESSION_TOKEN }},type=PLAINTEXT \
            --query 'build.id' \
            --output text)
          echo "Started CodeBuild build: $BUILD_ID"
          echo "build_id=$BUILD_ID" >> "$GITHUB_OUTPUT"

      - name: Wait for CodeBuild to finish
        env:
          BUILD_ID:   ${{ steps.start_build.outputs.build_id }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          set -euo pipefail
          echo "Waiting for CodeBuild build: $BUILD_ID"
          while true; do
            STATUS=$(aws codebuild batch-get-builds \
              --ids "$BUILD_ID" \
              --query 'builds[0].buildStatus' \
              --output text)
            echo "$(date -u +%FT%TZ) CodeBuild status: $STATUS"
            case "$STATUS" in
              SUCCEEDED) exit 0;;
              FAILED|FAULT|STOPPED|TIMED_OUT) echo "Build failed: $STATUS" >&2; exit 1;;
              IN_PROGRESS) sleep 15;;
              *) sleep 15;;
            esac
          done
